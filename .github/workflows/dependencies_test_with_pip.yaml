name: preliminary-ci-test-with-pip

on:
  push:
    branches: [ dev ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.7', '3.8', '3.9']
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ hashFiles('setup.py') }}-${{ hashFiles('requirements.txt') }}

      - name: Install dependencies for the considered OS
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install cdsapi
          pip install ecmwf-api-client
          pip install flake8
      - name: Display Python version
        run: python --version

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Add .cdsapirc to home directory
        shell: python
        env:
          CDSAPIRC: ${{ secrets.CDSAPIRC }}

        run: |
          from __future__ import print_function
          import os
          for n in ('CDSAPIRC',):
              m = os.path.expanduser("~/." + n.lower())
              if os.environ[n]:
                  with open(m, "w") as f:
                      print('url: https://cds.climate.copernicus.eu/api/v2', file=f)
                      print('key:' + os.environ[n], file=f)

      - name: generate test data request
        shell: python
        run: |
          #!/usr/bin/env python
          import cdsapi
          c = cdsapi.Client()
          c.retrieve("reanalysis-era5-pressure-levels",
          {
          "variable": "temperature",
          "pressure_level": "1000",
          "product_type": "reanalysis",
          "year": "2008",
          "month": "01",
          "day": "01",
          "time": "12:00",
          "format": "netcdf",
          "area": [55, 55, 5, 135]
          }, "download.nc")
