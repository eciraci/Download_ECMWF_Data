name: preliminary-ci-test-with-mambaforge

on:
  push:
    branches: [ dev ]

env:
  CACHE_NUMBER: 0  # increase to reset cache manually

jobs:
  build-linux:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            label: linux-64
            prefix: /usr/share/miniconda3/envs/my-env
            python-version: 3.7

          - os: ubuntu-latest
            label: linux-64b
            prefix: /usr/share/miniconda3/envs/my-env
            python-version: 3.8

    name: ${{ matrix.label }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v2
        with:
            miniforge-variant: Mambaforge
            miniforge-version: latest
            activate-environment: my-env
            use-mamba: true
            python-version: ${{ matrix.python-version }}

      - name: Set cache date
        run: echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - uses: actions/cache@v2
        with:
          path: ${{ matrix.prefix }}
          key: ${{ matrix.label }}-conda-${{ hashFiles('environment.yml') }}-${{ env.DATE }}-${{ env.CACHE_NUMBER }}
        id: cache

      - name: Update environment
        run: mamba env update -n my-env -f environment.yml
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Install Other Dependencies with PIP
        run: |
         python -m pip install --upgrade pip
         pip install cdsapi
         pip install ecmwf-api-client

      - name: Add .cdsapirc to home directory
        shell: python
        env:
          CDSAPIRC: ${{ secrets.CDSAPIRC }}

        run: |
          from __future__ import print_function
          import os
          for n in ('CDSAPIRC',):
              m = os.path.expanduser("~/." + n.lower())
              if os.environ[n]:
                  with open(m, "w") as f:
                      print('url: https://cds.climate.copernicus.eu/api/v2', file=f)
                      print('key:' + os.environ[n], file=f)

      - name: generate test data request
        shell: python
        run: |
          #!/usr/bin/env python
          import cdsapi
          c = cdsapi.Client()
          c.retrieve("reanalysis-era5-pressure-levels",
          {
          "variable": "temperature",
          "pressure_level": "1000",
          "product_type": "reanalysis",
          "year": "2008",
          "month": "01",
          "day": "01",
          "time": "12:00",
          "format": "netcdf",
          "area": [55, 55, 5, 135]
          }, "download.nc")
 
